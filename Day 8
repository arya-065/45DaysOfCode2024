#include <iostream>
#include <string>

int strStr(const std::string& haystack, const std::string& needle) {
    // If needle is an empty string, return 0
    if (needle.empty()) {
        return 0;
    }
    
    // Length of haystack and needle
    int haystackLength = haystack.size();
    int needleLength = needle.size();
    
    // Loop through haystack
    for (int i = 0; i <= haystackLength - needleLength; ++i) {
        // Check for substring match
        if (haystack.substr(i, needleLength) == needle) {
            return i; // Return index of the first occurrence
        }
    }
    
    // If not found, return -1
    return -1;
}

int main() {
    std::string haystack, needle;
    
    // Input for haystack and needle
    std::cout << "Enter the haystack string: ";
    std::getline(std::cin, haystack);
    
    std::cout << "Enter the needle string: ";
    std::getline(std::cin, needle);
    
    // Find the index
    int index = strStr(haystack, needle);
    
    // Output the result
    if (index != -1) {
        std::cout << "The first occurrence of '" << needle << "' in '" << haystack << "' is at index: " << index << std::endl;
    } else {
        std::cout << "'" << needle << "' is not found in '" << haystack << "'." << std::endl;
    }
    
    return 0;
}
