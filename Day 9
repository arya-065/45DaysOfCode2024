#include <iostream>
#include <vector>

std::vector<int> plusOne(std::vector<int>& digits) {
    int n = digits.size();
    
    // Start from the last digit and process backward
    for (int i = n - 1; i >= 0; --i) {
        // If the digit is less than 9, just increment it and return
        if (digits[i] < 9) {
            digits[i]++;
            return digits;
        }
        // If the digit is 9, set it to 0 and continue to the next significant digit
        digits[i] = 0;
    }
    
    // If we finished the loop, it means we had a carry out (e.g., 999 -> 000)
    // So we need to add a new digit at the front
    digits.insert(digits.begin(), 1);
    return digits;
}

int main() {
    // Example usage
    std::vector<int> digits = {9, 9, 9}; // The input can be changed
    std::vector<int> result = plusOne(digits);
    
    std::cout << "Result: ";
    for (int digit : result) {
        std::cout << digit;
    }
    std::cout << std::endl;

    return 0;
}
