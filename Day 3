#include <iostream>
#include <unordered_map>
#include <string>

int romanToInteger(const std::string& s) {
    // Mapping of Roman numerals to their integer values
    std::unordered_map<char, int> romanValues = {
        {'I', 1},
        {'V', 5},
        {'X', 10},
        {'L', 50},
        {'C', 100},
        {'D', 500},
        {'M', 1000}
    };
    
    int total = 0;
    int prevValue = 0;
    
    // Iterate through the string from right to left
    for (int i = s.size() - 1; i >= 0; --i) {
        char currentChar = s[i];
        int currentValue = romanValues[currentChar];
        
        // Determine whether to add or subtract the current value
        if (currentValue < prevValue) {
            total -= currentValue;
        } else {
            total += currentValue;
        }
        
        // Update the previous value
        prevValue = currentValue;
    }
    
    return total;
}

int main() {
    std::string roman;
    
    std::cout << "Enter a Roman numeral: ";
    std::cin >> roman;
    
    int integerValue = romanToInteger(roman);
    std::cout << "The integer value is: " << integerValue << std::endl;
    
    return 0;
}
