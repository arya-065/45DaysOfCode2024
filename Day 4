#include <iostream>
#include <vector>
#include <string>

std::string longestCommonPrefix(const std::vector<std::string>& strs) {
    if (strs.empty()) return "";

    // Start with the first string as the prefix
    std::string prefix = strs[0];

    // Compare the prefix with each string in the array
    for (size_t i = 1; i < strs.size(); ++i) {
        while (strs[i].find(prefix) != 0) { // Check if prefix is not a prefix of strs[i]
            prefix = prefix.substr(0, prefix.size() - 1); // Reduce the prefix
            if (prefix.empty()) return ""; // If no prefix found, return empty string
        }
    }

    return prefix;
}

int main() {
    std::vector<std::string> strs = {"flower", "flow", "flight"};
    std::string result = longestCommonPrefix(strs);
    std::cout << "Longest common prefix: " << result << std::endl; // Output: "fl"

    return 0;
}
